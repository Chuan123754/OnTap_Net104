@model IEnumerable<OnTap_Net104.Models.CartDetail>

@{
    ViewData["Title"] = "View_MuaLai";
    AppDbContext db = new AppDbContext();
}

<h1>Mua lại</h1>
@{
    var tenNguoiDung = Context.Session.GetString("currentUsername");
}
<span hidden id="tenNguoiDung">@tenNguoiDung</span>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CartID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="product_@item.Id">
                <td>
                    <input class="form-check-input" id="Status_@item.Id" type="checkbox" checked="@item.Status" onchange="update('@item.Id',document.getElementById('Quantity_@item.Id').value,this.checked)" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.ActionLink(item.ProductId.ToString(), "Details", new { Controller = "Product", id = item.ProductId })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CartID)
                </td>
                <td>
                    <div id="total_@item.Id">@(@db.Products.FirstOrDefault(a => a.Id == item.ProductId).Price * @item.Quantity)</div>
                    <span id="price_@item.Id" hidden>@db.Products.FirstOrDefault(a => a.Id == item.ProductId).Price</span>
                    <span id="productQuatity_@item.Id" hidden>@db.Products.FirstOrDefault(a => a.Id == item.ProductId).Quantity</span>
                </td>
                <td>
                    <input class="form-control mx-1" id="Quantity_@item.Id" style="min-width:200px" type="number" min="1" max="@db.Products.FirstOrDefault(a=>a.Id == item.ProductId).Quantity" value="@item.Quantity" name="Quantity" onchange="update('@item.Id',this.value,document.getElementById('Status_@item.Id').checked)" />
                    <span class="text-danger" id="error_@item.Id" hidden="@(item.Quantity > db.Products.FirstOrDefault(a => a.Id == item.ProductId).Quantity ? false : true)">Không đủ số lượng</span>
                </td>
                <td>
                    @* @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) | *@
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <button onclick="Pay()" class="btn btn-outline-danger" id="buttonPay" style="float:right">Thanh toán</button>
</div>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <img src="..." class="rounded me-2" alt="...">
            <strong class="me-auto">Bootstrap</strong>
            <small>11 mins ago</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Hello, world! This is a toast message.
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    function update(id, quantity, status) {

        var productQuantity = document.getElementById('productQuatity_' + id);
        var productQuantityValue = parseInt(productQuantity.textContent)

        var CartQuantity = document.getElementById('Quantity_' + id);
        var errorQuatity = document.getElementById('error_' + id);
        var buttonPay = document.getElementById('buttonPay');

        if (quantity < 0 || quantity > productQuantityValue) {
            errorQuatity.hidden = false;
            buttonPay.disabled = true;
            console.log(quantity + "< 0 || " + quantity + '>' + productQuantityValue)

            return;
        }
        else {
            errorQuatity.hidden = true;
            buttonPay.disabled = false;
            console.log(quantity + "> 0 && " + quantity + '<' + productQuantityValue)
        }

        $.ajax({
            url: '/CartDetails/Edit',
            type: 'POST',
            data: { id: id, Quantity: quantity, Status: status },
            success: function (data) {
                var totalPriceElement = document.getElementById('total_' + id);
                var priceElement = document.getElementById('price_' + id);
                var price = parseFloat(priceElement.textContent);
                totalPriceElement.textContent = (price * quantity).toFixed(2);

                CartQuantity.value = quantity;
                console.log(quantity, productQuantityValue, status)
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi
            }
        });
    }
    function Pay() {
        var tenNguoiDung = document.getElementById('tenNguoiDung').textContent;

        $.ajax({
            url: '/Bill/Create',
            type: 'POST',
            data: { isMuaLai :true},
            success: function (data) {
                if (data == "Không có sản phẩm nào được chọn" || data == "Có sản phẩm vượt quá số lượng vui lòng thử lại!") {
                    toastr.error(data, 'Lỗi');
                } else {
                    var billId = data;
                    $.ajax({
                        url: '/BillDetails/Create',
                        type: 'POST',
                        data: { billID: billId, muaLai: true },
                        success: function (data) {
                            toastr.success('Thanh toán thành công đơn hàng mua lại', 'Success');
                            setTimeout(function () {
                                window.location = '/Bill/Index_ViewKhachHang?username=' + tenNguoiDung;
                            }, 1500);
                        },
                        error: function (xhr, status, error) {
                            toastr.error('Có lỗi xảy ra vui lòng thử lại!', 'Error');
                        }
                    });
                }
                
            },
            error: function (xhr, status, error) {
                toastr.error('Có lỗi xảy ra vui lòng thử lại!', 'Error');
            }
        });


    }


</script>